<!DOCTYPE html>
<html lang="en">
<head>
    
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Dashboard</title>
  
    <link rel="stylesheet" href="~/vendors/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="~/vendors/css/vendor.bundle.base.css">

   
    <link rel="stylesheet" href="~/vendors/jvectormap/jquery-jvectormap.css">
    <link rel="stylesheet" href="~/vendors/flag-icon-css/css/flag-icon.min.css">
    <link rel="stylesheet" href="~/vendors/owl-carousel-2/owl.carousel.min.css">
    <link rel="stylesheet" href="~/vendors/owl-carousel-2/owl.theme.default.min.css">


    <link rel="stylesheet" href="~/css/style.css" />
    <link rel="stylesheet" href="~/css/green.css" />
  
    <link rel="shortcut icon" href="/assets/images/logo3.png"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        .custom-text-color {
            color: hotpink !important;
        }

        #table thead th {
            color: steelblue;
            text-align: center;
        }

        #table tbody td {
            color: white;
            text-align: center;
        }

        .navbar-menu-wrapper {
            display: flex;
            align-items: center;
            padding: 1rem;
        }

            .navbar-menu-wrapper .back-button {
                position: absolute;
                left: 1rem;
                display: flex;
                align-items: center;
                cursor: pointer;
            }

                .navbar-menu-wrapper .back-button i {
                    margin-right: 0.5rem;
                }

            .navbar-menu-wrapper h3 {
                margin: 0 auto;
            }

        .hidden-column {
            display: none;
        }
    </style>
</head>
<body>
    <div class="navbar-menu-wrapper p-1 flex-grow d-flex align-items-stretch">
        <div class="back-button" onclick="window.location.href='/iotmenu/Index'">
            <i class="fas fa-arrow-left"></i>
            <span>Back</span>
        </div>
        <ul class="navbar-nav w-100">
            <li class="nav-item w-100">
                <h3 style="text-align: center;">IoT Pieces Count</h3>
            </li>
        </ul>
    </div>

    <div class="center-container">
        <div class="form-group text-center">
            <input type="date" id="filterDate" class="form-control" style="max-width: 250px; display: inline-block;">
            <button id="filterBtn" class="btn btn-primary" style="margin-left: 10px;">Search</button>
        </div>
    </div>


    <div class="content-wrapper">
        <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="col-lg-12 grid-margin stretch-card">
                            <div class="card">
                                <div class="card-body">
                                    <h4 class="card-title text-warning">Hourly Output by Operation</h4>
                                    <div class="table-responsive">
                                        <table class="table table-hover" id="table">
                                            <thead>
                                                <tr>
                                                    <th>Module</th>
                                                    <th>Operation</th>
                                                    <th>Machine</th>
                                                    <th>Type</th>
                                                    <!---- <th>0</th>
                                                     <th>1</th>
                                                     <th>2</th>
                                                     <th>3</th>
                                                     <th>4</th>-->
                                                    <th>5</th>
                                                    <th>6</th>
                                                    <th>7</th>
                                                    <th>8</th>
                                                    <th>9</th>
                                                    <th>10</th>
                                                    <th>11</th>
                                                    <th>12</th>
                                                    <th>13</th>
                                                    <th>14</th>
                                                    <th>15</th>
                                                    <th>16</th>
                                                    <th>17</th>
                                                    <th>18</th>
                                                    <th>19</th>
                                                    <th>20</th>
                                                    <th>21</th>
                                                    <th>22</th>
                                                    <th>Target</th>
                                                    <th>Total count</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function deleteData(rowIndex) {
            if (confirm("Are you sure you want to delete this user?")) {
                try {
                    const table = document.getElementById('table');
                    const row = table.rows[rowIndex];

                    const module = row.cells[0].textContent.trim();
                    const operation = row.cells[2].textContent.trim();
                    const chipid = row.cells[3].textContent.trim();
                    const username = row.cells[4].textContent.trim();
                    const style = row.cells[1].textContent.trim();
                    const mac = row.cells[16].textContent.trim();

                    const deleteData = {
                        module: module,
                        operation: operation,
                        chipid: chipid,
                        username: username,
                        style: style,
                        mac: mac,
                    }; 



                    $.ajax({
                        url: '/iotout/DeleteIotData',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(deleteData),
                        success: function (response) {
                            console.log('Data deleted successfully:', response);
                            //fetchData();
                            if (response.success) {
                                table.deleteRow(rowIndex);
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function (error) {
                            console.error('Error deleting data:', error);
                        }
                    });
                } catch (error) {
                    console.error('Error deleting data:', error);
                }
            }
        }

           $(document).ready(function () {
               let previousData = [];

               function fetchData(selectedDate = null) {
                   let url = '/synout/GetIotData';
                   if (selectedDate) {
                        url += `?date=${selectedDate}&PlantName=MEC`;
                     } else {
                     url += `?date=${new Date().toISOString().slice(0, 10)}&PlantName=MEC`;
                   }
                   $.ajax({
                       url: url,
                       type: 'GET',
                       success: function (data) {
                           var tableBody = $('#table tbody');
                           tableBody.empty();

                           var previousModule = '';

                           data.forEach(function (item, index) {
                               if (previousModule && previousModule !== item.module) {
                                   var emptyRow = '<tr><td colspan="17"></td></tr>';
                                   tableBody.append(emptyRow);
                               }

                               var rowClass = '';

                               // Compare new data with previous data
                               if (previousData.length > 0 && previousData[index]) {
                                   if (JSON.stringify(item) !== JSON.stringify(previousData[index])) {
                                       rowClass = 'blink-green'; // Apply blink effect if data changed
                                   }
                               }

                               var row = '<tr class="' + rowClass + '" ondblclick="redirectToDetailsPage(this)">' +
                                   '<td>' + (item.module || '') + '</td>' +
                                   '<td class="custom-text-color">' + (item.operation || '') + '</td>' +
                                   '<td>' + (item.chipID || '') + '</td>' +
                                   '<td>' + (item.machineID || '') + '</td>' +

                                /*   '<td>' + getColorCodedCell(item.h0, item.target) + '</td>' +
                                   '<td>' + getColorCodedCell(item.h1, item.target) + '</td>' +
                                   '<td>' + getColorCodedCell(item.h2, item.target) + '</td>' +
                                   '<td>' + getColorCodedCell(item.h3, item.target) + '</td>' +
                                   '<td>' + getColorCodedCell(item.h4, item.target) + '</td>' +*/
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h5, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h6, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h7, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h8, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h9, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h10, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h11, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h12, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h13, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h14, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h15, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h16, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h17, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h18, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h19, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h20, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h21, item.target) + '</td>' +
                                   '<td class="custom-text-color1">' + getColorCodedCell(item.h22, item.target) + '</td>' +
                                   '<td>' +(item.target ||'') + '</td>' +
                                   '<td class="custom-text-color2">' + (item.sum || '') + '</td>' +
                                   '<td><button class="btn btn-inverse-danger btn-fw" onclick="deleteData(this.parentNode.parentNode.rowIndex)">Delete</button></td>' +
                                   '<td class="hidden-column">' + (item.style) + '</td>' +
                                   '<td class="hidden-column">' + (item.mac) + '</td>' +
                                   '<td class="hidden-column">' + (item.plant) + '</td>' +
                                   '</tr>';
                               tableBody.append(row);

                               previousModule = item.module;
                           });

                           // Store the new data as the previous data
                           previousData = data;


                           setTimeout(function () {
                               $('.blink-green').removeClass('blink-green');
                           }, 15000);
                       },
                       error: function (xhr, status, error) {
                           console.error("Error fetching data: " + error);
                       }
                   });
               }

               function getColorCodedCell(value, target) {
                   var percentage = (value / target) * 100;
                   var color = '';

                   if (percentage < 30) {
                       color = 'text-danger';
                   } else if (percentage >= 30 && percentage < 70) {
                       color = 'text-warning';
                   } else if (percentage >= 70) {
                       color = 'text-success';
                   }

                   return '<span class="' + color + '">' + value + '</span>';
               }

               // Initial load
               $('#filterDate').val(new Date().toISOString().split('T')[0]);
               fetchData(new Date().toISOString().split('T')[0]);

               // Auto-refresh (every 60 seconds)
               setInterval(() => {
                   const selectedDate = $('#filterDate').val();
                   fetchData(selectedDate);
               }, 60000);

               // Filter button click
               $('#filterBtn').click(function () {
                   const selectedDate = $('#filterDate').val();
                   fetchData(selectedDate);
               });
           });

        function redirectToDetailsPage(row) {
            const cells = row.cells;
            const rowData = {
                module: cells[0].textContent.trim(),
                style: cells[1].textContent.trim(),
                operation: cells[2].textContent.trim(),
                chipID: cells[3].textContent.trim(),
                userName: cells[4].textContent.trim(),
                target: cells[5].textContent.trim(),
                h1: cells[6].textContent.trim(),
                h2: cells[7].textContent.trim(),
                h3: cells[8].textContent.trim(),
                h4: cells[9].textContent.trim(),
                h5: cells[10].textContent.trim(),
                h6: cells[11].textContent.trim(),
                h7: cells[12].textContent.trim(),
                h8: cells[13].textContent.trim(),
                h9: cells[14].textContent.trim(),
                mac: cells[16].textContent.trim(),
                sum: cells[15].textContent.trim(),
               // utilization: cells[16].textContent.trim(),
       //aa
       
                plant: cells[18].textContent.trim(),
                ft: cells[17].textContent.trim()
            };

            const url = new URL('/iotplusminus', window.location.origin);
            Object.keys(rowData).forEach(key => url.searchParams.append(key, rowData[key]));
            window.location.href = url;
        }
    </script>
</body>
</html>
